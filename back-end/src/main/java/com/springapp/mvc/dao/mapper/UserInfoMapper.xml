<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springapp.mvc.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.springapp.mvc.entity.UserInfo" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="openId" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="wxNickName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="wxAvatarUrl" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="backPhotoUrl" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="fakeNickName" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.springapp.mvc.entity.UserInfo" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="openId" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="wxNickName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="wxAvatarUrl" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="backPhotoUrl" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="fakeNickName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="fakeAvatarUrlList" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, openId, wxNickName, wxAvatarUrl, backPhotoUrl, fakeNickName
  </sql>
  <sql id="Blob_Column_List" >
    fakeAvatarUrlList
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from userInfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByOpenId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from userInfo
    where openId = #{openId, jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userInfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springapp.mvc.entity.UserInfo" >
    insert into userInfo (id, openId, wxNickName, 
      wxAvatarUrl, backPhotoUrl, fakeNickName, 
      fakeAvatarUrlList)
    values (#{id,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{wxnickname,jdbcType=VARCHAR}, 
      #{wxavatarurl,jdbcType=VARCHAR}, #{backphotourl,jdbcType=VARCHAR}, #{fakenickname,jdbcType=VARCHAR}, 
      #{fakeavatarurllist,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.springapp.mvc.entity.UserInfo" >
    insert into userInfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openid != null" >
        openId,
      </if>
      <if test="wxnickname != null" >
        wxNickName,
      </if>
      <if test="wxavatarurl != null" >
        wxAvatarUrl,
      </if>
      <if test="backphotourl != null" >
        backPhotoUrl,
      </if>
      <if test="fakenickname != null" >
        fakeNickName,
      </if>
      <if test="fakeavatarurllist != null" >
        fakeAvatarUrlList,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="wxnickname != null" >
        #{wxnickname,jdbcType=VARCHAR},
      </if>
      <if test="wxavatarurl != null" >
        #{wxavatarurl,jdbcType=VARCHAR},
      </if>
      <if test="backphotourl != null" >
        #{backphotourl,jdbcType=VARCHAR},
      </if>
      <if test="fakenickname != null" >
        #{fakenickname,jdbcType=VARCHAR},
      </if>
      <if test="fakeavatarurllist != null" >
        #{fakeavatarurllist,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springapp.mvc.entity.UserInfo" >
    update userInfo
    <set >
      <if test="openid != null" >
        openId = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="wxnickname != null" >
        wxNickName = #{wxnickname,jdbcType=VARCHAR},
      </if>
      <if test="wxavatarurl != null" >
        wxAvatarUrl = #{wxavatarurl,jdbcType=VARCHAR},
      </if>
      <if test="backphotourl != null" >
        backPhotoUrl = #{backphotourl,jdbcType=VARCHAR},
      </if>
      <if test="fakenickname != null" >
        fakeNickName = #{fakenickname,jdbcType=VARCHAR},
      </if>
      <if test="fakeavatarurllist != null" >
        fakeAvatarUrlList = #{fakeavatarurllist,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByOpenIdSelective" parameterType="com.springapp.mvc.entity.UserInfo" >
    update userInfo
    <set >
     <!-- <if test="openid != null" >
        openId = #{openid,jdbcType=VARCHAR},
      </if>-->
      <if test="wxnickname != null" >
        wxNickName = #{wxnickname,jdbcType=VARCHAR},
      </if>
      <if test="wxavatarurl != null" >
        wxAvatarUrl = #{wxavatarurl,jdbcType=VARCHAR},
      </if>
      <if test="backphotourl != null" >
        backPhotoUrl = #{backphotourl,jdbcType=VARCHAR},
      </if>
      <if test="fakenickname != null" >
        fakeNickName = #{fakenickname,jdbcType=VARCHAR},
      </if>
      <if test="fakeavatarurllist != null" >
        fakeAvatarUrlList = #{fakeavatarurllist,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where openId = #{openid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.springapp.mvc.entity.UserInfo" >
    update userInfo
    set openId = #{openid,jdbcType=VARCHAR},
    wxNickName = #{wxnickname,jdbcType=VARCHAR},
    wxAvatarUrl = #{wxavatarurl,jdbcType=VARCHAR},
    backPhotoUrl = #{backphotourl,jdbcType=VARCHAR},
    fakeNickName = #{fakenickname,jdbcType=VARCHAR},
    fakeAvatarUrlList = #{fakeavatarurllist,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springapp.mvc.entity.UserInfo" >
    update userInfo
    set openId = #{openid,jdbcType=VARCHAR},
      wxNickName = #{wxnickname,jdbcType=VARCHAR},
      wxAvatarUrl = #{wxavatarurl,jdbcType=VARCHAR},
      backPhotoUrl = #{backphotourl,jdbcType=VARCHAR},
      fakeNickName = #{fakenickname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>