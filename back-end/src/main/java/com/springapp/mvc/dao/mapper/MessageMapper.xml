<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springapp.mvc.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="com.springapp.mvc.entity.Message">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="userId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="likeNum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="anonymous" javaType="java.lang.Short" jdbcType="DECIMAL" />
      <arg column="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.springapp.mvc.entity.Message">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="userId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="likeNum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="anonymous" javaType="java.lang.Short" jdbcType="DECIMAL" />
      <arg column="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, userId, likeNum, anonymous, createTime
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springapp.mvc.entity.Message">
    insert into message (id, userId, likeNum, 
      anonymous, createTime, content
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{likenum,jdbcType=INTEGER}, 
      #{anonymous,jdbcType=DECIMAL}, #{createtime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.springapp.mvc.entity.Message">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="likenum != null">
        likeNum,
      </if>
      <if test="anonymous != null">
        anonymous,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="likenum != null">
        #{likenum,jdbcType=INTEGER},
      </if>
      <if test="anonymous != null">
        #{anonymous,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springapp.mvc.entity.Message">
    update message
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="likenum != null">
        likeNum = #{likenum,jdbcType=INTEGER},
      </if>
      <if test="anonymous != null">
        anonymous = #{anonymous,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.springapp.mvc.entity.Message">
    update message
    set userId = #{userid,jdbcType=VARCHAR},
      likeNum = #{likenum,jdbcType=INTEGER},
      anonymous = #{anonymous,jdbcType=DECIMAL},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springapp.mvc.entity.Message">
    update message
    set userId = #{userid,jdbcType=VARCHAR},
      likeNum = #{likenum,jdbcType=INTEGER},
      anonymous = #{anonymous,jdbcType=DECIMAL},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>